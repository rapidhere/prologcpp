struct QueryAtom {};

template <int atom_idx>
struct Atom {};

template <int... src>
struct pack {
    static constexpr int data[] = { src... };
};

template <class T1, class T2>
struct mergePack {};

template <
    template<int...> class T1,
    template<int...> class T2,
    int... src1,
    int... src2
>
struct mergePack<T1<src1...>, T2<src2...>> {
    typedef pack<src1..., src2...> ret;
};

template <int i, class... vals> struct at;

template <int i, class head, class...rest>
struct at<i, head, rest...> {
    typedef typename v<i - 1, rest...>::t t;
};

template <class head, class...rest>
struct at<0, head, rest...> {
    typedef head t;
};

template <int i> struct at<i> {};
